%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 7.12.0.635 (R2011a). Operating System: Microsoft Windows 7.
%%Title: C:\Users\Gareth\Google Drive\Year 4\EEE4051F - NVP\Group 5 NVP_PCS\Financials\nvp_plot.eps
%%CreationDate: 04/28/2016  20:40:57
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:  -214   176   811   665
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:  -214   176   811   665
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode -2568 7980 csm

    0     0 12304  5862 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 12305 5863 rf
6 w
0 4777 9535 0 0 -4777 1600 5217 4 MP
PP
-9535 0 0 4777 9535 0 0 -4777 1600 5217 5 MP stroke
4 w
DO
0 sg
1600 5217 mt 1600  440 L
1600  440 mt 1600  440 L
3507 5217 mt 3507  440 L
3507  440 mt 3507  440 L
5414 5217 mt 5414  440 L
5414  440 mt 5414  440 L
7206 5217 mt 7206  440 L
7206  440 mt 7206  440 L
7321 5217 mt 7321  440 L
7321  440 mt 7321  440 L
9228 5217 mt 9228  440 L
9228  440 mt 9228  440 L
11135 5217 mt 11135  440 L
11135  440 mt 11135  440 L
1600 5025 mt 11135 5025 L
11135 5025 mt 11135 5025 L
1600 4643 mt 11135 4643 L
11135 4643 mt 11135 4643 L
1600 4261 mt 11135 4261 L
11135 4261 mt 11135 4261 L
1600 3879 mt 11135 3879 L
11135 3879 mt 11135 3879 L
1600 3497 mt 11135 3497 L
11135 3497 mt 11135 3497 L
1600 3115 mt 11135 3115 L
11135 3115 mt 11135 3115 L
1600 2732 mt 11135 2732 L
11135 2732 mt 11135 2732 L
1600 2350 mt 11135 2350 L
11135 2350 mt 11135 2350 L
1600 1968 mt 11135 1968 L
11135 1968 mt 11135 1968 L
1600 1586 mt 11135 1586 L
11135 1586 mt 11135 1586 L
1600 1204 mt 11135 1204 L
11135 1204 mt 11135 1204 L
1600  822 mt 11135  822 L
11135  822 mt 11135  822 L
SO
6 w
1600  440 mt 11135  440 L
1600 5217 mt 11135 5217 L
11135 5217 mt 11135  440 L
1600 5217 mt 1600  440 L
1600 5217 mt 11135 5217 L
1600 5217 mt 1600  440 L
1600 5217 mt 1600 5121 L
1600  440 mt 1600  535 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 156 FMSR

1557 5396 mt 
(0) s
3507 5217 mt 3507 5121 L
3507  440 mt 3507  535 L
3464 5396 mt 
(1) s
5414 5217 mt 5414 5121 L
5414  440 mt 5414  535 L
5371 5396 mt 
(2) s
7206 5217 mt 7206 5121 L
7206  440 mt 7206  535 L
7167 5396 mt 
(x) s
7321 5217 mt 7321 5121 L
7321  440 mt 7321  535 L
7278 5396 mt 
(3) s
9228 5217 mt 9228 5121 L
9228  440 mt 9228  535 L
9185 5396 mt 
(4) s
11135 5217 mt 11135 5121 L
11135  440 mt 11135  535 L
11092 5396 mt 
(5) s
1600 5025 mt 1695 5025 L
11135 5025 mt 11039 5025 L
 798 5083 mt 
(R-400 000) s
1600 4643 mt 1695 4643 L
11135 4643 mt 11039 4643 L
 798 4701 mt 
(R-200 000) s
1600 4261 mt 1695 4261 L
11135 4261 mt 11039 4261 L
1366 4319 mt 
(R0) s
1600 3879 mt 1695 3879 L
11135 3879 mt 11039 3879 L
 889 3937 mt 
(R200 000) s
1600 3497 mt 1695 3497 L
11135 3497 mt 11039 3497 L
 889 3555 mt 
(R400 000) s
1600 3115 mt 1695 3115 L
11135 3115 mt 11039 3115 L
 889 3173 mt 
(R600 000) s
1600 2732 mt 1695 2732 L
11135 2732 mt 11039 2732 L
 889 2790 mt 
(R800 000) s
1600 2350 mt 1695 2350 L
11135 2350 mt 11039 2350 L
 759 2408 mt 
(R1 000 000) s
1600 1968 mt 1695 1968 L
11135 1968 mt 11039 1968 L
 759 2026 mt 
(R1 200 000) s
1600 1586 mt 1695 1586 L
11135 1586 mt 11039 1586 L
 759 1644 mt 
(R1 400 000) s
1600 1204 mt 1695 1204 L
11135 1204 mt 11039 1204 L
 759 1262 mt 
(R1 600 000) s
1600  822 mt 1695  822 L
11135  822 mt 11039  822 L
 759  880 mt 
(R1 800 000) s
1600  440 mt 11135  440 L
1600 5217 mt 11135 5217 L
11135 5217 mt 11135  440 L
1600 5217 mt 1600  440 L
gs 1600 440 9536 4778 rc
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
97 -229 96 -216 96 -205 97 -192 96 -182 96 -170 97 -161 96 -150 
96 -140 97 -132 96 -122 96 -114 97 -106 96 -98 96 -91 97 -84 
96 -78 96 -72 96 -66 97 -60 96 -56 96 -52 97 -47 96 -43 
96 -41 97 -37 96 -35 96 -32 97 -31 96 -30 96 -29 97 -28 
96 -28 96 -28 96 -29 97 -30 96 -32 96 -33 97 -36 96 -38 
96 -41 97 -43 96 -44 96 -46 97 -46 96 -46 96 -46 97 -44 
96 -43 96 -40 96 -38 97 -35 96 -31 96 -26 97 -22 96 -16 
96 -11 97 -4 96 3 96 11 97 18 96 24 96 29 97 34 
96 38 96 41 96 42 97 43 96 44 96 43 97 41 96 38 
96 35 97 31 96 25 96 20 97 12 96 5 96 -5 97 -13 
96 -21 96 -26 96 -26 97 -24 96 -20 96 -17 97 -18 96 -22 
96 -30 97 -40 96 -44 96 -43 97 -33 96 -16 96 7 97 39 
96 77 96 122 96 175 1600 4261 100 MP stroke
gr

c8
0 sg
6173 5565 mt 
(Years) s
 669 3339 mt  -90 rotate
(Net Cash Flow) s
90 rotate
5566  316 mt 
(Net Cash Flow vs Time) s
18 w
12 w
DO
SO
18 w
1600  440 mt 11135  440 L
1600 5217 mt 11135 5217 L
11135 5217 mt 11135  440 L
1600 5217 mt 1600  440 L
1600 5217 mt 11135 5217 L
1600 5217 mt 1600  440 L
1600 4261 mt 11135 4261 L
11135 4261 mt 1600 4261 L
1600  440 mt 11135  440 L
1600 5217 mt 11135 5217 L
11135 5217 mt 11135  440 L
1600 5217 mt 1600  440 L

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
